---
# tasks file for tls_client_rbac_auth

- name: Download and Install kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kubectl
    dest: /usr/bin/kubectl
    mode: 755


- name: Generate Worker KubeConfig
  include_tasks: generate_worker_kubeconfig.yml
  loop:
     - "{{ k8sv161_w1 }}"
     - "{{ k8sv161_w2 }}"


- name: Set cluster into kube-proxy.kubeconfig 
  command: bash -c 'kubectl config set-cluster kubernetes-the-hard-way --certificate-authority=ca.pem --embed-certs=true --server=https://{{ k8sv161_lb_ip }}:6443 --kubeconfig=kube-proxy.kubeconfig'
  args:
    chdir: /vagrant
    creates: /vagrant/kube-proxy.kubeconfig

- name: Set credentials into kube-proxy.kubeconfig 
  command: bash -c 'kubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig'
  args:
    chdir: /vagrant

- name: Set context into kube-proxy.kubeconfig 
  command: bash -c 'kubectl config set-context default --cluster=kubernetes-the-hard-way --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig'
  args:
    chdir: /vagrant

- name: Set use-context into kube-proxy.kubeconfig
  command: bash -c 'kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig'
  args:
    chdir: /vagrant


- name: Create the Encryption Config File
  command: bash -c "head -c 32 /dev/urandom | base64"
  register: command_output 

- set_fact:
   k8s_encryption_key: "{{ command_output.stdout }}"
   
- name: Copying Encryption Config File
  template: 
    src: encryption-config.yaml 
    dest: /vagrant
