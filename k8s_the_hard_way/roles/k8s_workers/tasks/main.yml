---
# tasks file for k8s_workers--n


- name: Creates /var/run/kubernetes
  file: path=/var/run/{{item}} state=directory
  with_items:
          - kubernetes

- name: Creates /var/lib/{kubelet,kube-proxy,kubernetes}
  file: path=/var/lib/{{item}} state=directory
  with_items:
          - kubelet
          - kube-proxy
          - kubernetes

- name: Creates /etc/cni/net.d 
  file: path=/etc/cni/net.d state=directory

- name: Creates /opt/cni/bin 
  file: path=/opt/cni/bin state=directory

- name: Download CNI plugins
  get_url:
    url: https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz 
    dest: /tmp

- name: Extract and Install CNI Plugins
  unarchive: src=/tmp/cni-plugins-amd64-v0.6.0.tgz dest=/opt/cni/bin/ copy=no
  mode: 755

- name: Download Containerd CNI
  get_url:
    url: https://github.com/kubernetes-incubator/cri-containerd/releases/download/v1.0.0-beta.0/cri-containerd-1.0.0-beta.0.linux-amd64.tar.gz 
    dest: /tmp

- name: Extract and Install Containerd CNI 
  unarchive: src=/tmp/cri-containerd-1.0.0-beta.0.linux-amd64.tar.gz dest=/ copy=no
  mode: 755

- name: Copy the CNI Plugin Bridge
  template:
    src: 10-bridge.conf
    dest: /etc/cni/net.d/
    
- name: Copy the CNI Plugin Loopback
  copy:
    src: 99-loopback.conf
    dest: /etc/cni/net.d/


- name: Copy kubeconfig files to /var/lib/kubelet
  command: bash -c 'cp {{item}}  /var/lib/kubelet'
  args:
    chdir: /vagrant
  with_items:
    - "{{ ansible_nodename }}.pem"
    - "{{ ansible_nodename }}-key.pem"

- name: Copy CA to /var/lib/kubernetes/
  command: bash -c 'cp ca.pem /var/lib/kubernetes/'
  args:
    chdir: /vagrant

- name: Copy kubeconfig files to /var/lib/kubelet/kubeconfig
  command: bash -c 'cp {{item}}  /var/lib/kubelet/kubeconfig'
  args:
    chdir: /vagrant
  with_items:
    - "{{ ansible_nodename }}.kubeconfig"

- name: Copy kubeconfig file to /var/lib/kube-proxy/kubeconfig 
  command: bash -c 'cp {{item}}  /var/lib/kube-proxy/kubeconfig'
  args:
    chdir: /vagrant
  with_items:
    - kube-proxy.kubeconfig

- name: Download and Install kube-proxy
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kube-proxy
    dest: /usr/bin/kube-proxy
    mode: 755

- name: Download and Install kubelet
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kubelet
    dest: /usr/bin/kubelet
    mode: 755

- name: Download and Install kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kubectl
    dest: /usr/bin/kubectl
    mode: 755


- name: Copying kubelet and kube-proxy Services to systemd
  template:
    src: "{{item}}.service"
    dest: /etc/systemd/system/
  with_items:
    - kubelet
    - kube-proxy

- name: Enable service containerd and ensure it is not masked
  systemd:
    name: containerd
    enabled: yes
    masked: no

- name: Starts kubelet and kube-proxy Services
  systemd:
    state: started
    daemon_reload: yes
    enabled: yes
    name: "{{item}}"
  with_items:
    - kubelet
    - kube-proxy
